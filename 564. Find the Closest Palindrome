

class Solution:
    def nearestPalindromic(self, n: str) -> str:
        length = len(n)
        print(length)
        if n == "1":
            return "0"
        
        # 3 candidates
        prefix = n[:(length + 1) // 2]
        prefix_num = int(prefix)
        
        candidates = set([
            str(10**length + 1),  # e.g., 1000 -> 1001
            str(10**(length - 1) - 1)  # e.g., 1000 -> 999
        ])
        
        for i in [-1, 0, 1]:
            candidate_prefix = str(prefix_num + i)
            if length % 2 == 0:
                candidate = candidate_prefix + candidate_prefix[::-1]
            else:
                candidate = candidate_prefix + candidate_prefix[:-1][::-1]
            candidates.add(candidate)
        
        candidates.discard(n)
        
        # Return the closest one
        def diff(x):
            return abs(int(x) - int(n)), int(x)
        

        print(candidates)
        return min(candidates, key=diff)
