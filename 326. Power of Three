import math
class Solution:
    def isPowerOfThree(self, n: int) -> bool:
        if n <= 0 : return False 
        while n % 3 == 0 :
            n /= 3
        return n == 1

######################################################
import math
class Solution:
    def isPowerOfThree(self, n: int) -> bool:
            if n <= 0:
                return False
            if n == 1:
                return True
            return (math.log10(n)/math.log10(3)) % 1 == 0
            # log26/ log3 --> 2.96 where 2.96 % 1 in decimals. so 26 is not a perfect number. 


######################################################
class Solution:
    def isPowerOfThree(self, n: int) -> bool:
        if n <= 0 : return False
        x,i = 1, 0
        while x<= n :
            if x == n : return True
            i = i + 1
            x = 3 ** i
        return False 
