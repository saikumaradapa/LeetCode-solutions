class Solution:
    def maxProduct(self, nums: List[int]) -> int:
        m1, m2 = 0, 0
        for v in nums :
            if v>m1 :
                m2 = m1                
                m1 = v
            elif v>m2 :
                m2 = v

        return (m1-1)*(m2-1)

''' time complexity : O(n)        
    space complexity : O(1)
'''

############################################################################################################################################################


class Solution:
    def maxProduct(self, nums: List[int]) -> int:
        res = 0
        for i in range(len(nums)) :
            for j in range(i+1,len(nums)) :
                res = max((nums[i]-1)*(nums[j]-1), res)
        return res

''' time complexity : O(n^2)        
    space complexity : O(1)
'''
