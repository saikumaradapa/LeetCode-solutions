class Solution:
    def deleteNode(self, root: Optional[TreeNode], key: int) -> Optional[TreeNode]:
        if not root : return root 
        if key < root.val :
            root.left = self.deleteNode(root.left, key)
        elif key > root.val :
            root.right = self.deleteNode(root.right, key)
        else :
            if not root.right :
                return root.left
            if not root.left :
                return root.right 
            else :
                curr = root.right 
                while curr.left :
                    curr = curr.left 
                root.val = curr.val 
                root.right = self.deleteNode(root.right, root.val)
        return root 
