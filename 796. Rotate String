class Solution:
    def rotateString(self, s: str, goal: str) -> bool:
        if s == goal:
            return True 

        n = len(s)
        s_arr = [ch for ch in s]
        goal_arr = [ch for ch in goal]

        for i in range(n):
            s_arr.append(s_arr.pop(0))

            if s_arr == goal_arr:
                return True
        return False 

''' time complexity : O(n ^ 2)
    space complexity : O(n)
'''




##################################################################################################################################################################################




class Solution:
    def rotateString(self, s: str, goal: str) -> bool:
        i = 0
        while i < len(s) :
            if s == goal : return True
            s = s[1:]+s[0]
            i += 1
        return False

''' Time Complexity: O(n^2)
    Space Complexity: O(n)
'''   
