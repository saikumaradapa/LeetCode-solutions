class Solution:
    def removeKdigits(self, num: str, k: int) -> str:
        stack = []

        for digit in num:
            while k > 0 and stack and stack[-1] > digit:
                stack.pop()
                k -= 1
            stack.append(digit)
        
        while k > 0:
            stack.pop()
            k -= 1
        
        res = "".join(stack).lstrip('0')

        return res if res else '0'

''' time complexity : O(n)    in the worst case all the digits inserted once and similarly poped once
    space complexity : O(n)    
'''
