class Solution:
    def myAtoi(self, s: str) -> int:
        s = s.lstrip()
        if not s: return 0
        sign = -1 if s[0]=='-' else 1
        if s[0] in ['-', '+'] : s = s[1:]
        res, i = 0, 0
        while i < len(s)  and s[i].isdigit() :
                res = res * 10 + int(s[i])        
                i += 1
        res *= sign

        # Handle overflow and underflow
        min_val, max_val = -2**31, 2**31 - 1
        if res < min_val:
            return min_val
        elif res > max_val:
            return max_val
        else:
            return res
''' time complexity : O(n)
    space complexity : O(1)
'''
