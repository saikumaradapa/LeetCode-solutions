Problem link : https://leetcode.com/problems/delete-nodes-and-return-forest/description/


class Solution:
    def delNodes(self, root: Optional[TreeNode], to_delete: List[int]) -> List[TreeNode]:
        target = set(to_delete)
        if not target: return [root]

        res = []
        if root.val not in target:
            res.append(root)
        curr = TreeNode(-1, root)

        q = deque([curr])
        while q:
            node = q.popleft()

            if node.left:
                q.append(node.left)
                if node.left and node.left.val in target:                    
                    node.left = None 
            
            if node.right:
                q.append(node.right)
                if node.right and node.right.val in target:
                    node.right = None 
                
            if node.val in target:
                if node.left and node.left.val not in target:
                    res.append(node.left)
                if node.right and node.right.val not in target:
                    res.append(node.right)

        return res
