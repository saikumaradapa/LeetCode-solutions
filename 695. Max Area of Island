Problem Link : https://leetcode.com/problems/max-area-of-island/description/


class Solution:
    def maxAreaOfIsland(self, grid: List[List[int]]) -> int:
        n, m = len(grid), len(grid[0])
        visited = [[0] * m for i in range(n)]

        def dfs(r, c):
            if r < 0 or c < 0 or r == n or c == m or visited[r][c] or not grid[r][c]:
                return 0             
            visited[r][c] = 1 
            return 1 + (dfs(r+1, c) + dfs(r-1, c) + dfs(r, c+1) + dfs(r, c-1))

        res = 0 
        for i in range(n):
            for j in range(m):
                if grid[i][j] and not visited[i][j]:
                    res = max(res, dfs(i, j))
        return res 

''' time complexity : O(n * m)        
    space complexity : O(n * m)
'''
