# TLE 
class Solution:
    def maxProduct(self, nums: List[int]) -> int:
        n = len(nums)
        res = min(nums)
        for i in range(n) :
            pt = 1
            for j in range(i,n) :
                pt *= nums[j]
                res = max(res, pt)
        return res

#########################################################################################################################################################

class Solution:
    def maxProduct(self, nums: List[int]) -> int:
        n = len(nums)
        pre = 1
        pos = 1
        res = min(nums)
        for i in range(n) :
            pre *= nums[i]
            pos *= nums[n-i-1] 
            res = max(res, pre, pos)
            if pre == 0 :
                pre = 1
            if pos == 0 :
                pos = 1
        return res

''' time complexity : O(n)
    space complexity : O(1) 
'''
