class Solution:
    def permute(self, nums: List[int]) -> List[List[int]]:
        result = []
        # if the len of list is 1 return it as list
        # for i in entire len of list  
        # take remove first element then find permutations of that list then 
        # append the removed element at end of permutations 
        # entend the permutations to result list
        # again add removed element to nums


        if len(nums) == 1 :
            return [nums[:]]
        for i in range(len(nums)) :
            n = nums.pop(0)
            perms = self.permute(nums)

            for perm in perms :
                perm.append(n)
            result.extend(perms)
            nums.append(n)
        return result
