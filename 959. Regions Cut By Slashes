Problem Link : https://leetcode.com/problems/regions-cut-by-slashes/description/?envType=daily-question&envId=2024-08-10


class Solution:
    def regionsBySlashes(self, grid: List[str]) -> int:
        ROWS1, COLS1 = len(grid), len(grid[0])
        ROWS2, COLS2 = 3 * ROWS1, 3 * COLS1
        grid2 = [[0] * COLS2 for _ in range(ROWS2)]

        for r1 in range(ROWS1):
            for c1 in range(COLS1):
                r2, c2 = 3 * r1, 3 * c1 
                if grid[r1][c1] == '/':
                    grid2[r2][c2+2] = 1
                    grid2[r2+1][c2+1] = 1
                    grid2[r2+2][c2] = 1
                if grid[r1][c1] == '\\':
                    grid2[r2][c2] = 1
                    grid2[r2+1][c2+1] = 1
                    grid2[r2+2][c2+2] = 1
        
        cnt = 0 
        visit = set()
        for i in range(ROWS2):
            for j in range(COLS2):
                if grid2[i][j] == 0 and (i, j) not in visit:
                    cnt += 1
                    self.dfs(i, j, grid2, visit)
        return cnt 
    
    def dfs(self, r, c, grid2, visit):
        if r < 0 or c < 0 or r == len(grid2) or c == len(grid2[0]) or grid2[r][c] == 1 or (r, c) in visit:
            return 
        
        visit.add((r, c))
        self.dfs(r+1, c, grid2, visit)
        self.dfs(r, c+1, grid2, visit)
        self.dfs(r-1, c, grid2, visit)
        self.dfs(r, c-1, grid2, visit)

''' time complexity : O(n ^ 2)
    space complexity : O(n ^ 2)
'''
