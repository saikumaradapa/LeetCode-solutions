Problem Link : https://leetcode.com/problems/fraction-addition-and-subtraction/description/?envType=daily-question&envId=2024-08-23


from math import gcd
class Solution:
    def fractionAddition(self, expression: str) -> str:
        num, dem = 0, 1 

        curNum, curDem, sign = 0, 0, 1
        i = 0 
        while i < (len(expression)):
            if expression[i] == "/":
                i += 1
                continue 
            if expression[i] in "+-":
                if expression[i] == "-":
                    sign = -1 
                i += 1
                continue 
            if not curNum:
                curNum = sign * int(expression[i]) 
                while i+1<len(expression) and expression[i+1] in "0123456789":
                    curNum = (curNum * 10) + int(expression[i+1])
                    i += 1 
                i += 1
                continue 
            if not curDem:
                curDem = int(expression[i])                
                while i+1<len(expression) and expression[i+1] in "0123456789":
                    curDem = (curDem * 10) + int(expression[i+1])
                    i += 1
                # print(str(num)+"/"+str(dem), str(curNum)+"/"+str(curDem))

                num = (num * curDem) + (dem * curNum)
                dem = dem * curDem 
                curNum, curDem, sign = 0, 0, 1
                i += 1
        gcd_val = gcd(num, dem)
        return str(num//gcd_val) + "/" + str(dem//gcd_val)

''' time complexity : O(n)
    space complexity : O(1)
'''
