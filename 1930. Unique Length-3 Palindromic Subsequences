class Solution:
    def countPalindromicSubsequence(self, s: str) -> int:
        res = 0
        for alph in range(97, 123) :
            ch = chr(alph)
            l,r = 0, len(s)-1
            while l < len(s) and s[l] != ch :
                l += 1
            while r > -1 and s[r] != ch :
                r -= 1 
            if l != r and l != len(s) and r != -1 :
                ss = set(s[l+1:r])
                res += len(ss)                 
        return res
''' time complexity : O(26*n)
    space complexity : O(n)
'''
