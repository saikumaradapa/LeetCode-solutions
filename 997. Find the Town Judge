from collections import defaultdict
class Solution:
    def findJudge(self, n: int, trust: List[List[int]]) -> int:
        if n == 1 and not trust: return 1
        tfrom = defaultdict(int)        
        tto = defaultdict(int)
        for a, b in trust :
            tfrom[a] += 1
            tto[b] += 1
        for a,b in trust :
            if tto[a] == n-1 and tfrom[a] == 0:
                return a 
            elif  tto[b] == n-1 and tfrom[b] == 0:
                return b
        return -1

''' time complexity : O(n)    
    space complexity : O(n)
'''
