class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        if not grid :
            return 0
        count = 0
        visited = set()

        def bfs(r, c, visited) :
            q = [(r,c)]
            visited.add((r,c))
            

            while q :
                r, c = q.pop(0)
                dir = [[0,1], [0, -1], [-1, 0], [1, 0]] 
                for dr, dc in dir :
                    row, col = r+dr, c+dc 
                    if row in range(len(grid)) and col in range(len(grid[0])) and grid[row][col] == "1"  and (row, col) not in visited :
                        visited.add((row, col)) 
                        q.append((row, col))

        for i in range(len(grid)) :
            for j in range(len(grid[0])) :
                if grid[i][j] == "1" and (i, j)  not in visited : 
                    count += 1
                    visited.add((i, j))
                    bfs(i, j , visited) 
        return count
