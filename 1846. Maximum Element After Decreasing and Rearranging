class Solution:
    def maximumElementAfterDecrementingAndRearranging(self, arr: List[int]) -> int:
        arr.sort()
        prev = 0
        for n in arr :
            prev = min(prev + 1, n) 
        return prev
''' 
time complexity : O(nlogn)
space complexity : O(1)
without modifying the array 
'''


############################################################################################################################################################################################################


class Solution:
    def maximumElementAfterDecrementingAndRearranging(self, arr: List[int]) -> int:
        arr.sort()
        arr[0] = 1
        res = 1
        for i in range(1,len(arr)) :
            if abs(arr[i-1]-arr[i]) > 1 :
                arr[i] = arr[i-1] + 1
            res = max(res, arr[i])

        return res
''' time complexity : O(nlogn)
    space complexity : O(1)
'''
        
