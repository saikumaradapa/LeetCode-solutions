Problem Link : https://leetcode.com/problems/walking-robot-simulation/description/?envType=daily-question&envId=2024-09-04

class Solution:
    def robotSim(self, commands: List[int], obstacles: List[List[int]]) -> int:
        direct = [[0, 1], [1, 0], [0, -1], [-1, 0]]        # N, E, S, W        
        dir = 0 
        res = 0 
        x, y = 0, 0

        hasSet = {tuple(obstacle) for obstacle in obstacles}

        for command in commands:
            if command == -1:
                dir = (dir + 1) % 4 
            elif command == -2:
                dir = (dir + 3) % 4 
            else:
                dx, dy = direct[dir]
                for _ in range(command):
                    if (x + dx, y + dy) in hasSet:
                        break 
                    x, y = x + dx, y + dy 
            
            res = max(res, x ** 2 + y ** 2)
        return res 

''' time complexity : O(n + m)        
    space complexity : O(m)
'''
