class Solution:
    def numSubarrayProductLessThanK(self, nums: List[int], k: int) -> int:
        p = 1
        res = 0
        l = 0
        for r in range(len(nums)):
            p *= nums[r]
            while l < r and p >= k:
                p //= nums[l]
                l += 1
            if p < k:
                res += (r-l+1)
        return res

''' time complexity : O(n)          sliding window
    space complexity : O(1)
'''
