Problem Link : https://leetcode.com/problems/spiral-matrix-iii/description/?envType=daily-question&envId=2024-08-08


class Solution:
    def spiralMatrixIII(self, rows: int, cols: int, rStart: int, cStart: int) -> List[List[int]]:
        directions = [(0, 1), (1, 0), (0, -1), (-1, 0)]

        res = []
        step = 1 
        idx = 0 
        while len(res) < rows * cols:
            for i in range(2):
                for j in range(step):
                    if 0 <= rStart < rows and 0<= cStart < cols:
                        res.append((rStart, cStart))
                    rStart, cStart = rStart + directions[idx][0], cStart + directions[idx][1]
                idx = (idx + 1) % 4 
            step += 1

        return res 

''' time complexity : O(n * m)        
    space complexity : O(1)
'''
