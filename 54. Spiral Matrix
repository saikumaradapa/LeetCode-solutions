class Solution:
    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:
        topend, bottomend, leftend, rightend = 0, len(matrix)-1, 0, len(matrix[0])-1
        res = []
        while topend <= bottomend and leftend <= rightend :

            for i in range(leftend, rightend+1) :
                res.append(matrix[topend][i])
            topend += 1
            if leftend <= rightend :
                for i in range(topend, bottomend+1) :
                    res.append(matrix[i][rightend])
                rightend -= 1

            if topend <= bottomend : 
                for i in range(rightend, leftend-1, -1) :
                    res.append(matrix[bottomend][i])
                bottomend -= 1

            if leftend <= rightend :
                for i in range(bottomend, topend-1, -1) :
                    res.append(matrix[i][leftend])
                leftend += 1
        return res
        
        ''' Time complexity O(m*n)
            Space complexity O(m*n) - to store the result list '''
