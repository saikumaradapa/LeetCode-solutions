class Solution:
    def maxFrequency(self, nums: List[int], k: int) -> int:
        nums.sort()
        n = len(nums)

        def isPossible(val):
            l, r = 0, val - 1
            prefix_sum = [0] * (n + 1)

            for i in range(n):
                prefix_sum[i + 1] = prefix_sum[i] + nums[i]

            while r < n:
                res = nums[r] * (r - l + 1) - (prefix_sum[r + 1] - prefix_sum[l])
                if res <= k:
                    return True
                l, r = l + 1, r + 1
            return False

        l, r = 1, len(nums)
        while l <= r:
            mid = (l + r) // 2
            if isPossible(mid):
                l = mid + 1
            else:
                r = mid - 1
        return r

''' 
    Time Complexity: O(nlogn)
    Space Complexity: O(n)
'''
